{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowOperator",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct IConstantFlowAgreementHook.CFAHookParams",
          "name": "newFlowData",
          "type": "tuple"
        }
      ],
      "name": "onCreate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowOperator",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct IConstantFlowAgreementHook.CFAHookParams",
          "name": "newFlowData",
          "type": "tuple"
        },
        {
          "internalType": "int96",
          "name": "oldFlowRate",
          "type": "int96"
        }
      ],
      "name": "onDelete",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowOperator",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct IConstantFlowAgreementHook.CFAHookParams",
          "name": "newFlowData",
          "type": "tuple"
        },
        {
          "internalType": "int96",
          "name": "oldFlowRate",
          "type": "int96"
        }
      ],
      "name": "onUpdate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "onCreate(address,(address,address,address,int96))": "e3d8fefe",
    "onDelete(address,(address,address,address,int96),int96)": "2742e95a",
    "onUpdate(address,(address,address,address,int96),int96)": "6ac5bc31"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"internalType\":\"struct IConstantFlowAgreementHook.CFAHookParams\",\"name\":\"newFlowData\",\"type\":\"tuple\"}],\"name\":\"onCreate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"internalType\":\"struct IConstantFlowAgreementHook.CFAHookParams\",\"name\":\"newFlowData\",\"type\":\"tuple\"},{\"internalType\":\"int96\",\"name\":\"oldFlowRate\",\"type\":\"int96\"}],\"name\":\"onDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"internalType\":\"struct IConstantFlowAgreementHook.CFAHookParams\",\"name\":\"newFlowData\",\"type\":\"tuple\"},{\"internalType\":\"int96\",\"name\":\"oldFlowRate\",\"type\":\"int96\"}],\"name\":\"onUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"The contract that implements this interface MUST only allow the CFA contract to call it\",\"kind\":\"dev\",\"methods\":{\"onCreate(address,(address,address,address,int96))\":{\"details\":\"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\",\"params\":{\"newFlowData\":\"the new flow data taken by the hook\",\"token\":\"the streamed super token\"},\"returns\":{\"_0\":\"bool\"}},\"onDelete(address,(address,address,address,int96),int96)\":{\"details\":\"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\",\"params\":{\"newFlowData\":\"the new flow data taken by the hook\",\"oldFlowRate\":\"previous flowrate\",\"token\":\"the streamed super token\"},\"returns\":{\"_0\":\"bool\"}},\"onUpdate(address,(address,address,address,int96),int96)\":{\"details\":\"This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\",\"params\":{\"newFlowData\":\"the new flow data taken by the hook\",\"oldFlowRate\":\"previous flowrate\",\"token\":\"the streamed super token\"},\"returns\":{\"_0\":\"bool\"}}},\"title\":\"IConstantFlowAgreementHook interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onCreate(address,(address,address,address,int96))\":{\"notice\":\"A hook which executes on stream creation if the hook contract is set in the CFA\"},\"onDelete(address,(address,address,address,int96),int96)\":{\"notice\":\"A hook which executes on stream deletion if the hook contract is set in the CFA\"},\"onUpdate(address,(address,address,address,int96),int96)\":{\"notice\":\"A hook which executes on stream update if the hook contract is set in the CFA\"}},\"notice\":\"An interface for the functions needed by a CFA hook contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol\":\"IConstantFlowAgreementHook\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":core/=lib/core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":protocol-monorepo/=lib/protocol-monorepo/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol\":{\"keccak256\":\"0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f\",\"dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluidToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "struct IConstantFlowAgreementHook.CFAHookParams",
              "name": "newFlowData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowOperator",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluidToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "struct IConstantFlowAgreementHook.CFAHookParams",
              "name": "newFlowData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowOperator",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ]
            },
            {
              "internalType": "int96",
              "name": "oldFlowRate",
              "type": "int96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onDelete",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluidToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "struct IConstantFlowAgreementHook.CFAHookParams",
              "name": "newFlowData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowOperator",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ]
            },
            {
              "internalType": "int96",
              "name": "oldFlowRate",
              "type": "int96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onUpdate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "onCreate(address,(address,address,address,int96))": {
            "details": "This should be implemented with an onlyCFA modifier, so that only the CFA can call the function",
            "params": {
              "newFlowData": "the new flow data taken by the hook",
              "token": "the streamed super token"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "onDelete(address,(address,address,address,int96),int96)": {
            "details": "This should be implemented with an onlyCFA modifier, so that only the CFA can call the function",
            "params": {
              "newFlowData": "the new flow data taken by the hook",
              "oldFlowRate": "previous flowrate",
              "token": "the streamed super token"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "onUpdate(address,(address,address,address,int96),int96)": {
            "details": "This should be implemented with an onlyCFA modifier, so that only the CFA can call the function",
            "params": {
              "newFlowData": "the new flow data taken by the hook",
              "oldFlowRate": "previous flowrate",
              "token": "the streamed super token"
            },
            "returns": {
              "_0": "bool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "onCreate(address,(address,address,address,int96))": {
            "notice": "A hook which executes on stream creation if the hook contract is set in the CFA"
          },
          "onDelete(address,(address,address,address,int96),int96)": {
            "notice": "A hook which executes on stream deletion if the hook contract is set in the CFA"
          },
          "onUpdate(address,(address,address,address,int96),int96)": {
            "notice": "A hook which executes on stream update if the hook contract is set in the CFA"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":core/=lib/core/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":protocol-monorepo/=lib/protocol-monorepo/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol": "IConstantFlowAgreementHook"
      },
      "libraries": {}
    },
    "sources": {
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol": {
        "keccak256": "0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b",
        "urls": [
          "bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f",
          "dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e",
        "urls": [
          "bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820",
          "dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6",
        "urls": [
          "bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72",
          "dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol",
    "id": 42668,
    "exportedSymbols": {
      "IConstantFlowAgreementHook": [
        42667
      ],
      "ISuperfluidToken": [
        45532
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:2041:46",
    "nodes": [
      {
        "id": 42614,
        "nodeType": "PragmaDirective",
        "src": "35:23:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 42616,
        "nodeType": "ImportDirective",
        "src": "60:70:46",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "file": "../superfluid/ISuperfluidToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42668,
        "sourceUnit": 45533,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42615,
              "name": "ISuperfluidToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45532,
              "src": "69:16:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42667,
        "nodeType": "ContractDefinition",
        "src": "373:1702:46",
        "nodes": [
          {
            "id": 42626,
            "nodeType": "StructDefinition",
            "src": "416:132:46",
            "nodes": [],
            "canonicalName": "IConstantFlowAgreementHook.CFAHookParams",
            "members": [
              {
                "constant": false,
                "id": 42619,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "455:6:46",
                "nodeType": "VariableDeclaration",
                "scope": 42626,
                "src": "447:14:46",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 42618,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "447:7:46",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42621,
                "mutability": "mutable",
                "name": "receiver",
                "nameLocation": "479:8:46",
                "nodeType": "VariableDeclaration",
                "scope": 42626,
                "src": "471:16:46",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 42620,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "471:7:46",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42623,
                "mutability": "mutable",
                "name": "flowOperator",
                "nameLocation": "505:12:46",
                "nodeType": "VariableDeclaration",
                "scope": 42626,
                "src": "497:20:46",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 42622,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:7:46",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42625,
                "mutability": "mutable",
                "name": "flowRate",
                "nameLocation": "533:8:46",
                "nodeType": "VariableDeclaration",
                "scope": 42626,
                "src": "527:14:46",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int96",
                  "typeString": "int96"
                },
                "typeName": {
                  "id": 42624,
                  "name": "int96",
                  "nodeType": "ElementaryTypeName",
                  "src": "527:5:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CFAHookParams",
            "nameLocation": "423:13:46",
            "scope": 42667,
            "visibility": "public"
          },
          {
            "id": 42638,
            "nodeType": "FunctionDefinition",
            "src": "889:116:46",
            "nodes": [],
            "documentation": {
              "id": 42627,
              "nodeType": "StructuredDocumentation",
              "src": "554:330:46",
              "text": "@notice A hook which executes on stream creation if the hook contract is set in the CFA\n @dev This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\n @param token the streamed super token\n @param newFlowData the new flow data taken by the hook\n @return bool"
            },
            "functionSelector": "e3d8fefe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onCreate",
            "nameLocation": "898:8:46",
            "parameters": {
              "id": 42634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42630,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "924:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42638,
                  "src": "907:22:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$45532",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 42629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42628,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "907:16:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45532,
                      "src": "907:16:46"
                    },
                    "referencedDeclaration": 45532,
                    "src": "907:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$45532",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42633,
                  "mutability": "mutable",
                  "name": "newFlowData",
                  "nameLocation": "952:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42638,
                  "src": "931:32:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CFAHookParams_$42626_memory_ptr",
                    "typeString": "struct IConstantFlowAgreementHook.CFAHookParams"
                  },
                  "typeName": {
                    "id": 42632,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42631,
                      "name": "CFAHookParams",
                      "nameLocations": [
                        "931:13:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42626,
                      "src": "931:13:46"
                    },
                    "referencedDeclaration": 42626,
                    "src": "931:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CFAHookParams_$42626_storage_ptr",
                      "typeString": "struct IConstantFlowAgreementHook.CFAHookParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "906:58:46"
            },
            "returnParameters": {
              "id": 42637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42638,
                  "src": "999:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42635,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:6:46"
            },
            "scope": 42667,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42652,
            "nodeType": "FunctionDefinition",
            "src": "1389:149:46",
            "nodes": [],
            "documentation": {
              "id": 42639,
              "nodeType": "StructuredDocumentation",
              "src": "1011:373:46",
              "text": "@notice A hook which executes on stream update if the hook contract is set in the CFA\n @dev This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\n @param token the streamed super token\n @param newFlowData the new flow data taken by the hook\n @param oldFlowRate previous flowrate\n @return bool"
            },
            "functionSelector": "6ac5bc31",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onUpdate",
            "nameLocation": "1398:8:46",
            "parameters": {
              "id": 42648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42642,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1433:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42652,
                  "src": "1416:22:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$45532",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 42641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42640,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "1416:16:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45532,
                      "src": "1416:16:46"
                    },
                    "referencedDeclaration": 45532,
                    "src": "1416:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$45532",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42645,
                  "mutability": "mutable",
                  "name": "newFlowData",
                  "nameLocation": "1469:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42652,
                  "src": "1448:32:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CFAHookParams_$42626_memory_ptr",
                    "typeString": "struct IConstantFlowAgreementHook.CFAHookParams"
                  },
                  "typeName": {
                    "id": 42644,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42643,
                      "name": "CFAHookParams",
                      "nameLocations": [
                        "1448:13:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42626,
                      "src": "1448:13:46"
                    },
                    "referencedDeclaration": 42626,
                    "src": "1448:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CFAHookParams_$42626_storage_ptr",
                      "typeString": "struct IConstantFlowAgreementHook.CFAHookParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42647,
                  "mutability": "mutable",
                  "name": "oldFlowRate",
                  "nameLocation": "1496:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42652,
                  "src": "1490:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 42646,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1406:107:46"
            },
            "returnParameters": {
              "id": 42651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42652,
                  "src": "1532:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42649,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1531:6:46"
            },
            "scope": 42667,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42666,
            "nodeType": "FunctionDefinition",
            "src": "1924:149:46",
            "nodes": [],
            "documentation": {
              "id": 42653,
              "nodeType": "StructuredDocumentation",
              "src": "1544:375:46",
              "text": "@notice A hook which executes on stream deletion if the hook contract is set in the CFA\n @dev This should be implemented with an onlyCFA modifier, so that only the CFA can call the function\n @param token the streamed super token\n @param newFlowData the new flow data taken by the hook\n @param oldFlowRate previous flowrate\n @return bool"
            },
            "functionSelector": "2742e95a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onDelete",
            "nameLocation": "1933:8:46",
            "parameters": {
              "id": 42662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42656,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1968:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42666,
                  "src": "1951:22:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$45532",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 42655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42654,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "1951:16:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45532,
                      "src": "1951:16:46"
                    },
                    "referencedDeclaration": 45532,
                    "src": "1951:16:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$45532",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42659,
                  "mutability": "mutable",
                  "name": "newFlowData",
                  "nameLocation": "2004:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42666,
                  "src": "1983:32:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CFAHookParams_$42626_memory_ptr",
                    "typeString": "struct IConstantFlowAgreementHook.CFAHookParams"
                  },
                  "typeName": {
                    "id": 42658,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42657,
                      "name": "CFAHookParams",
                      "nameLocations": [
                        "1983:13:46"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42626,
                      "src": "1983:13:46"
                    },
                    "referencedDeclaration": 42626,
                    "src": "1983:13:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CFAHookParams_$42626_storage_ptr",
                      "typeString": "struct IConstantFlowAgreementHook.CFAHookParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42661,
                  "mutability": "mutable",
                  "name": "oldFlowRate",
                  "nameLocation": "2031:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 42666,
                  "src": "2025:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 42660,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1941:107:46"
            },
            "returnParameters": {
              "id": 42665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42666,
                  "src": "2067:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42663,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2066:6:46"
            },
            "scope": 42667,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IConstantFlowAgreementHook",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 42617,
          "nodeType": "StructuredDocumentation",
          "src": "132:241:46",
          "text": "@title IConstantFlowAgreementHook interface\n @author Superfluid\n @notice An interface for the functions needed by a CFA hook contract\n @dev The contract that implements this interface MUST only allow the CFA contract to call it"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          42667
        ],
        "name": "IConstantFlowAgreementHook",
        "nameLocation": "383:26:46",
        "scope": 42668,
        "usedErrors": []
      }
    ],
    "license": "AGPLv3"
  },
  "id": 46
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "createFlow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "deleteFlow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountFlowInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountFlowrate",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        }
      ],
      "name": "getBufferAmountByFlowrate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bufferAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "getFlowInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastUpdated",
          "type": "uint256"
        },
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "getFlowrate",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        }
      ],
      "name": "setFlowrate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowrate",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "updateFlow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createFlow(address,address,address,int96,bytes)": "e15536b6",
    "deleteFlow(address,address,address,bytes)": "b4b333c6",
    "getAccountFlowInfo(address,address)": "0f1ac495",
    "getAccountFlowrate(address,address)": "22c904d9",
    "getBufferAmountByFlowrate(address,int96)": "09f0b495",
    "getFlowInfo(address,address,address)": "2860fd93",
    "getFlowrate(address,address,address)": "1d8b6526",
    "setFlowrate(address,address,int96)": "57e6aa36",
    "updateFlow(address,address,address,int96,bytes)": "0c033991"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"createFlow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"deleteFlow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountFlowInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountFlowrate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"}],\"name\":\"getBufferAmountByFlowrate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bufferAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getFlowInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getFlowrate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"}],\"name\":\"setFlowrate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowrate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"updateFlow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createFlow(address,address,address,int96,bytes)\":{\"params\":{\"flowrate\":\"The flowrate in wad/second to be set initially\",\"receiver\":\"Receiver address of the flow\",\"sender\":\"Sender address of the flow\",\"token\":\"Super token address\",\"userData\":\"(optional) User data to be set. Should be set to zero if not needed.\"},\"returns\":{\"_0\":\"bool\"}},\"deleteFlow(address,address,address,bytes)\":{\"params\":{\"receiver\":\"Receiver address of the flow\",\"sender\":\"Sender address of the flow\",\"token\":\"Super token address\",\"userData\":\"(optional) User data to be set. Should be set to zero if not needed.\"},\"returns\":{\"_0\":\"bool\"}},\"getAccountFlowInfo(address,address)\":{\"params\":{\"account\":\"Account to query\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"Aggregate deposit amount currently locked as security buffer for outgoing flows\",\"flowrate\":\"Current net aggregate flowrate\",\"lastUpdated\":\"Timestamp of last update of a flow to or from the account (flowrate change)\",\"owedDeposit\":\"Aggregate extra deposit amount currently borrowed to SuperApps receiving from this account\"}},\"getAccountFlowrate(address,address)\":{\"params\":{\"account\":\"Account to query\",\"token\":\"Super token address\"},\"returns\":{\"flowrate\":\"The net flowrate (aggregate incoming minus aggregate outgoing flowrate), can be negative.\"}},\"getBufferAmountByFlowrate(address,int96)\":{\"params\":{\"flowrate\":\"The flowrate for which the buffer amount is calculated\",\"token\":\"Super token address\"},\"returns\":{\"bufferAmount\":\"The buffer amount required for the given configuration.\"}},\"getFlowInfo(address,address,address)\":{\"params\":{\"receiver\":\"The receiver of the flow\",\"sender\":\"The sender of the flow\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"Deposit amount locked as security buffer during the lifetime of the flow\",\"flowrate\":\"Current flowrate of the flow or zero if no flow exists\",\"lastUpdated\":\"Timestamp of last update (flowrate change) or zero if no flow exists\",\"owedDeposit\":\"Extra deposit amount borrowed to a SuperApp receiver by the flow sender\"}},\"getFlowrate(address,address,address)\":{\"details\":\"Currently, only 0 or 1 flows can exist between 2 accounts. This may change in the future.\",\"params\":{\"receiver\":\"The receiver of the flow\",\"sender\":\"The sender of the flow\",\"token\":\"Super token address\"},\"returns\":{\"flowrate\":\"The flowrate from the sender to the receiver account. Returns 0 if no flow exists.\"}},\"setFlowrate(address,address,int96)\":{\"params\":{\"flowrate\":\"The wanted flowrate in wad/second. Only positive values are valid here.\",\"receiver\":\"The receiver of the flow\",\"token\":\"Super token address\"},\"returns\":{\"_0\":\"bool\"}},\"updateFlow(address,address,address,int96,bytes)\":{\"params\":{\"flowrate\":\"The flowrate in wad/second the flow should be updated to\",\"receiver\":\"Receiver address of the flow\",\"sender\":\"Sender address of the flow\",\"token\":\"Super token address\",\"userData\":\"(optional) User data to be set. Should be set to zero if not needed.\"},\"returns\":{\"_0\":\"bool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createFlow(address,address,address,int96,bytes)\":{\"notice\":\"Low-level wrapper of createFlow/createFlowByOperator. If the address of msg.sender is not the same as the address of the `sender` argument, createFlowByOperator is used internally. In this case msg.sender needs to have permission to create flows on behalf of the given sender account with sufficient flowRateAllowance. Currently, only 1 flow can exist between 2 accounts, thus `createFlow` will fail if one already exists.\"},\"deleteFlow(address,address,address,bytes)\":{\"notice\":\"Low-level wrapper of deleteFlow/deleteFlowByOperator. If msg.sender isn't the same as sender address, msg.sender needs to have permission to delete flows on behalf of the given sender account.\"},\"getAccountFlowInfo(address,address)\":{\"notice\":\"Get aggregated flow information (if any exist) of an account. If only the net flowrate is needed, consider using `getAccountFlowrate` instead.\"},\"getAccountFlowrate(address,address)\":{\"notice\":\"Get the net flowrate of an account.\"},\"getBufferAmountByFlowrate(address,int96)\":{\"notice\":\"Get the buffer amount required for the given token and flowrate. This amount can vary based on the combination of token, flowrate and chain being queried. The result for a given set of parameters can change over time, because it depends on governance configurable protocol parameters. Changes of the required buffer amount affect only flows created or updated after the change.\"},\"getFlowInfo(address,address,address)\":{\"notice\":\"Get all available information about a flow (if exists). If only the flowrate is needed, consider using `getFlowrate` instead.\"},\"getFlowrate(address,address,address)\":{\"notice\":\"Get the flowrate of the flow between 2 accounts if exists.\"},\"setFlowrate(address,address,int96)\":{\"notice\":\"Sets the given flowrate between msg.sender and a given receiver. If there's no pre-existing flow and `flowrate` non-zero, a new flow is created. If there's an existing flow and `flowrate` non-zero, the flowrate of that flow is updated. If there's an existing flow and `flowrate` zero, the flow is deleted. If the existing and given flowrate are equal, no action is taken. On creation of a flow, a \\\"buffer\\\" amount is automatically detracted from the sender account's available balance. If the sender account is solvent when the flow is deleted, this buffer is redeemed to it.\"},\"updateFlow(address,address,address,int96,bytes)\":{\"notice\":\"Low-level wrapper if updateFlow/updateFlowByOperator. If the address of msg.sender doesn't match the address of the `sender` argument, updateFlowByOperator is invoked. In this case msg.sender needs to have permission to update flows on behalf of the given sender account with sufficient flowRateAllowance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IcfaV1Forwarder.sol\":\"IcfaV1Forwarder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@superfluid-finance/=lib/protocol-monorepo/packages/\",\":core/=lib/core/contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":protocol-monorepo/=lib/protocol-monorepo/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xce0197c49f5bb56f1446398e20347aedb1f490b243db064ac35a9ace25a96139\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://eb6c046bc8cc225c3343cb38630489582a0d605b6a0998cda83e675a0c8be858\",\"dweb:/ipfs/QmdAfuH9q1kzf4KC4yAFWZxJ9sJ7PkTrH6BHRELaWVXopi\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d\",\"dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e\",\"dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1\",\"dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6\",\"dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"src/interfaces/IcfaV1Forwarder.sol\":{\"keccak256\":\"0x93e1acfd961d30da03d31d5cf0e6621f23f6d0f618c669a4dc9aa9d9f2778dd4\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://a92361a2eb3fa033f2a6193c9b68dcd07db9e0130a52c640db9b1b8cc8d409eb\",\"dweb:/ipfs/QmQDZS4t5tPrDXHznSG1PtuBp38vVFDM9W9cc4BSNr4N7i\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createFlow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteFlow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountFlowInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountFlowrate",
          "outputs": [
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBufferAmountByFlowrate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bufferAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlowInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastUpdated",
              "type": "uint256"
            },
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlowrate",
          "outputs": [
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlowrate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "int96",
              "name": "flowrate",
              "type": "int96"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFlow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createFlow(address,address,address,int96,bytes)": {
            "params": {
              "flowrate": "The flowrate in wad/second to be set initially",
              "receiver": "Receiver address of the flow",
              "sender": "Sender address of the flow",
              "token": "Super token address",
              "userData": "(optional) User data to be set. Should be set to zero if not needed."
            },
            "returns": {
              "_0": "bool"
            }
          },
          "deleteFlow(address,address,address,bytes)": {
            "params": {
              "receiver": "Receiver address of the flow",
              "sender": "Sender address of the flow",
              "token": "Super token address",
              "userData": "(optional) User data to be set. Should be set to zero if not needed."
            },
            "returns": {
              "_0": "bool"
            }
          },
          "getAccountFlowInfo(address,address)": {
            "params": {
              "account": "Account to query",
              "token": "Super token address"
            },
            "returns": {
              "deposit": "Aggregate deposit amount currently locked as security buffer for outgoing flows",
              "flowrate": "Current net aggregate flowrate",
              "lastUpdated": "Timestamp of last update of a flow to or from the account (flowrate change)",
              "owedDeposit": "Aggregate extra deposit amount currently borrowed to SuperApps receiving from this account"
            }
          },
          "getAccountFlowrate(address,address)": {
            "params": {
              "account": "Account to query",
              "token": "Super token address"
            },
            "returns": {
              "flowrate": "The net flowrate (aggregate incoming minus aggregate outgoing flowrate), can be negative."
            }
          },
          "getBufferAmountByFlowrate(address,int96)": {
            "params": {
              "flowrate": "The flowrate for which the buffer amount is calculated",
              "token": "Super token address"
            },
            "returns": {
              "bufferAmount": "The buffer amount required for the given configuration."
            }
          },
          "getFlowInfo(address,address,address)": {
            "params": {
              "receiver": "The receiver of the flow",
              "sender": "The sender of the flow",
              "token": "Super token address"
            },
            "returns": {
              "deposit": "Deposit amount locked as security buffer during the lifetime of the flow",
              "flowrate": "Current flowrate of the flow or zero if no flow exists",
              "lastUpdated": "Timestamp of last update (flowrate change) or zero if no flow exists",
              "owedDeposit": "Extra deposit amount borrowed to a SuperApp receiver by the flow sender"
            }
          },
          "getFlowrate(address,address,address)": {
            "details": "Currently, only 0 or 1 flows can exist between 2 accounts. This may change in the future.",
            "params": {
              "receiver": "The receiver of the flow",
              "sender": "The sender of the flow",
              "token": "Super token address"
            },
            "returns": {
              "flowrate": "The flowrate from the sender to the receiver account. Returns 0 if no flow exists."
            }
          },
          "setFlowrate(address,address,int96)": {
            "params": {
              "flowrate": "The wanted flowrate in wad/second. Only positive values are valid here.",
              "receiver": "The receiver of the flow",
              "token": "Super token address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "updateFlow(address,address,address,int96,bytes)": {
            "params": {
              "flowrate": "The flowrate in wad/second the flow should be updated to",
              "receiver": "Receiver address of the flow",
              "sender": "Sender address of the flow",
              "token": "Super token address",
              "userData": "(optional) User data to be set. Should be set to zero if not needed."
            },
            "returns": {
              "_0": "bool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createFlow(address,address,address,int96,bytes)": {
            "notice": "Low-level wrapper of createFlow/createFlowByOperator. If the address of msg.sender is not the same as the address of the `sender` argument, createFlowByOperator is used internally. In this case msg.sender needs to have permission to create flows on behalf of the given sender account with sufficient flowRateAllowance. Currently, only 1 flow can exist between 2 accounts, thus `createFlow` will fail if one already exists."
          },
          "deleteFlow(address,address,address,bytes)": {
            "notice": "Low-level wrapper of deleteFlow/deleteFlowByOperator. If msg.sender isn't the same as sender address, msg.sender needs to have permission to delete flows on behalf of the given sender account."
          },
          "getAccountFlowInfo(address,address)": {
            "notice": "Get aggregated flow information (if any exist) of an account. If only the net flowrate is needed, consider using `getAccountFlowrate` instead."
          },
          "getAccountFlowrate(address,address)": {
            "notice": "Get the net flowrate of an account."
          },
          "getBufferAmountByFlowrate(address,int96)": {
            "notice": "Get the buffer amount required for the given token and flowrate. This amount can vary based on the combination of token, flowrate and chain being queried. The result for a given set of parameters can change over time, because it depends on governance configurable protocol parameters. Changes of the required buffer amount affect only flows created or updated after the change."
          },
          "getFlowInfo(address,address,address)": {
            "notice": "Get all available information about a flow (if exists). If only the flowrate is needed, consider using `getFlowrate` instead."
          },
          "getFlowrate(address,address,address)": {
            "notice": "Get the flowrate of the flow between 2 accounts if exists."
          },
          "setFlowrate(address,address,int96)": {
            "notice": "Sets the given flowrate between msg.sender and a given receiver. If there's no pre-existing flow and `flowrate` non-zero, a new flow is created. If there's an existing flow and `flowrate` non-zero, the flowrate of that flow is updated. If there's an existing flow and `flowrate` zero, the flow is deleted. If the existing and given flowrate are equal, no action is taken. On creation of a flow, a \"buffer\" amount is automatically detracted from the sender account's available balance. If the sender account is solvent when the flow is deleted, this buffer is redeemed to it."
          },
          "updateFlow(address,address,address,int96,bytes)": {
            "notice": "Low-level wrapper if updateFlow/updateFlowByOperator. If the address of msg.sender doesn't match the address of the `sender` argument, updateFlowByOperator is invoked. In this case msg.sender needs to have permission to update flows on behalf of the given sender account with sufficient flowRateAllowance."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@superfluid-finance/=lib/protocol-monorepo/packages/",
        ":core/=lib/core/contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":protocol-monorepo/=lib/protocol-monorepo/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IcfaV1Forwarder.sol": "IcfaV1Forwarder"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d",
        "urls": [
          "bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96",
          "dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV"
        ],
        "license": "MIT"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0xce0197c49f5bb56f1446398e20347aedb1f490b243db064ac35a9ace25a96139",
        "urls": [
          "bzz-raw://eb6c046bc8cc225c3343cb38630489582a0d605b6a0998cda83e675a0c8be858",
          "dweb:/ipfs/QmdAfuH9q1kzf4KC4yAFWZxJ9sJ7PkTrH6BHRELaWVXopi"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xa72d8fea72c6ce0d46007cfddeee507a8aae688cfa698e34767ac32ed629dfc7",
        "urls": [
          "bzz-raw://f965779bd0855f0959c0a99bd4c0198eaf3546f9c87da81780e815e7f58ada2d",
          "dweb:/ipfs/QmTaAh15dVoBqjwsnQSHzewvKgDmoj2of3t9P4Uzcnvtie"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e",
        "urls": [
          "bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820",
          "dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x6cc4b0724d977190c7441dfc3be6c6e48b43b555c3370af32ef5b6600f15f53f",
        "urls": [
          "bzz-raw://3e89c944642772a42429f21a11017b57deb98a9198f8e4f8749f00aaee71299e",
          "dweb:/ipfs/QmaSv9GvqikcGHJ3tcwATDHSpQw6mfnHPDtcfqcZSS7LF6"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0x2ccec11f964b165f64e453192793991bf28e1054069b6f709a39849a8286aeb4",
        "urls": [
          "bzz-raw://edbaf6db0b9c6803dcdb7c91a2ddbdba503a41ecc5cecf9c27a43643669bfff1",
          "dweb:/ipfs/QmYpf7XFKrnB2ZAPf8cDqfvZDfyoxMHA1x2FQSYzDFE3KZ"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0x316aa6cd16167569d5ee47fb2e4673b1def2117c7ea56969290ab6aec97cd263",
        "urls": [
          "bzz-raw://a5eb13acce613a227c2c2b3da2b88ad6361c9e541ca59ccee0bb5cf42cffccc6",
          "dweb:/ipfs/QmceA9RWHL1BWk4cPnYY55FjAdsEi1LfXrC11RbF8Wb8eW"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373",
        "urls": [
          "bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64",
          "dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2",
        "urls": [
          "bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229",
          "dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6",
        "urls": [
          "bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72",
          "dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f",
        "urls": [
          "bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae",
          "dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh"
        ],
        "license": "AGPLv3"
      },
      "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4",
        "urls": [
          "bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042",
          "dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg"
        ],
        "license": "AGPLv3"
      },
      "src/interfaces/IcfaV1Forwarder.sol": {
        "keccak256": "0x93e1acfd961d30da03d31d5cf0e6621f23f6d0f618c669a4dc9aa9d9f2778dd4",
        "urls": [
          "bzz-raw://a92361a2eb3fa033f2a6193c9b68dcd07db9e0130a52c640db9b1b8cc8d409eb",
          "dweb:/ipfs/QmQDZS4t5tPrDXHznSG1PtuBp38vVFDM9W9cc4BSNr4N7i"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IcfaV1Forwarder.sol",
    "id": 12234,
    "exportedSymbols": {
      "IConstantFlowAgreementV1": [
        9650
      ],
      "ISuperToken": [
        10654
      ],
      "ISuperfluid": [
        11304
      ],
      "IcfaV1Forwarder": [
        12233
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:7452:25",
    "nodes": [
      {
        "id": 12094,
        "nodeType": "PragmaDirective",
        "src": "51:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 12097,
        "nodeType": "ImportDirective",
        "src": "77:135:25",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12234,
        "sourceUnit": 11305,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12095,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11304,
              "src": "85:11:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 12096,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10654,
              "src": "98:11:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12099,
        "nodeType": "ImportDirective",
        "src": "213:148:25",
        "nodes": [],
        "absolutePath": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "file": "protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12234,
        "sourceUnit": 9651,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12098,
              "name": "IConstantFlowAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9650,
              "src": "221:24:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12233,
        "nodeType": "ContractDefinition",
        "src": "363:7139:25",
        "nodes": [
          {
            "id": 12112,
            "nodeType": "FunctionDefinition",
            "src": "1246:128:25",
            "nodes": [],
            "documentation": {
              "id": 12100,
              "nodeType": "StructuredDocumentation",
              "src": "395:846:25",
              "text": " @notice Sets the given flowrate between msg.sender and a given receiver.\n If there's no pre-existing flow and `flowrate` non-zero, a new flow is created.\n If there's an existing flow and `flowrate` non-zero, the flowrate of that flow is updated.\n If there's an existing flow and `flowrate` zero, the flow is deleted.\n If the existing and given flowrate are equal, no action is taken.\n On creation of a flow, a \"buffer\" amount is automatically detracted from the sender account's available balance.\n If the sender account is solvent when the flow is deleted, this buffer is redeemed to it.\n @param token Super token address\n @param receiver The receiver of the flow\n @param flowrate The wanted flowrate in wad/second. Only positive values are valid here.\n @return bool"
            },
            "functionSelector": "57e6aa36",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFlowrate",
            "nameLocation": "1255:11:25",
            "parameters": {
              "id": 12108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12103,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1288:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12112,
                  "src": "1276:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12102,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12101,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "1276:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "1276:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "1276:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12105,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1311:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12112,
                  "src": "1303:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12107,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "1335:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12112,
                  "src": "1329:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12106,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:83:25"
            },
            "returnParameters": {
              "id": 12111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12112,
                  "src": "1368:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:6:25"
            },
            "scope": 12233,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12125,
            "nodeType": "FunctionDefinition",
            "src": "1811:143:25",
            "nodes": [],
            "documentation": {
              "id": 12113,
              "nodeType": "StructuredDocumentation",
              "src": "1380:426:25",
              "text": " @notice Get the flowrate of the flow between 2 accounts if exists.\n @dev Currently, only 0 or 1 flows can exist between 2 accounts. This may change in the future.\n @param token Super token address\n @param sender The sender of the flow\n @param receiver The receiver of the flow\n @return flowrate The flowrate from the sender to the receiver account. Returns 0 if no flow exists."
            },
            "functionSelector": "1d8b6526",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFlowrate",
            "nameLocation": "1820:11:25",
            "parameters": {
              "id": 12121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12116,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1853:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12125,
                  "src": "1841:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12114,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "1841:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "1841:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "1841:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12118,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1876:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12125,
                  "src": "1868:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12120,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1900:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12125,
                  "src": "1892:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1831:83:25"
            },
            "returnParameters": {
              "id": 12124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12123,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "1944:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12125,
                  "src": "1938:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12122,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1938:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1937:16:25"
            },
            "scope": 12233,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12144,
            "nodeType": "FunctionDefinition",
            "src": "2626:284:25",
            "nodes": [],
            "documentation": {
              "id": 12126,
              "nodeType": "StructuredDocumentation",
              "src": "1960:661:25",
              "text": " @notice Get all available information about a flow (if exists).\n If only the flowrate is needed, consider using `getFlowrate` instead.\n @param token Super token address\n @param sender The sender of the flow\n @param receiver The receiver of the flow\n @return lastUpdated Timestamp of last update (flowrate change) or zero if no flow exists\n @return flowrate Current flowrate of the flow or zero if no flow exists\n @return deposit Deposit amount locked as security buffer during the lifetime of the flow\n @return owedDeposit Extra deposit amount borrowed to a SuperApp receiver by the flow sender"
            },
            "functionSelector": "2860fd93",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFlowInfo",
            "nameLocation": "2635:11:25",
            "parameters": {
              "id": 12134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12129,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2668:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2656:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12128,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12127,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "2656:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "2656:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "2656:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12131,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2691:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2683:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12133,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2715:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2707:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2646:83:25"
            },
            "returnParameters": {
              "id": 12143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12136,
                  "mutability": "mutable",
                  "name": "lastUpdated",
                  "nameLocation": "2798:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2790:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12138,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "2829:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2823:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12137,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12140,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "2859:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2851:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12142,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "2888:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12144,
                  "src": "2880:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2776:133:25"
            },
            "scope": 12233,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12155,
            "nodeType": "FunctionDefinition",
            "src": "3555:139:25",
            "nodes": [],
            "documentation": {
              "id": 12145,
              "nodeType": "StructuredDocumentation",
              "src": "2916:634:25",
              "text": " @notice Get the buffer amount required for the given token and flowrate.\n This amount can vary based on the combination of token, flowrate and chain being queried.\n The result for a given set of parameters can change over time,\n because it depends on governance configurable protocol parameters.\n Changes of the required buffer amount affect only flows created or updated after the change.\n @param token Super token address\n @param flowrate The flowrate for which the buffer amount is calculated\n @return bufferAmount The buffer amount required for the given configuration."
            },
            "functionSelector": "09f0b495",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBufferAmountByFlowrate",
            "nameLocation": "3564:25:25",
            "parameters": {
              "id": 12151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12148,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3602:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12155,
                  "src": "3590:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12147,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12146,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "3590:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "3590:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "3590:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12150,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "3615:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12155,
                  "src": "3609:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12149,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3609:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3589:35:25"
            },
            "returnParameters": {
              "id": 12154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12153,
                  "mutability": "mutable",
                  "name": "bufferAmount",
                  "nameLocation": "3680:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12155,
                  "src": "3672:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3672:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3671:22:25"
            },
            "scope": 12233,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12166,
            "nodeType": "FunctionDefinition",
            "src": "3960:127:25",
            "nodes": [],
            "documentation": {
              "id": 12156,
              "nodeType": "StructuredDocumentation",
              "src": "3700:255:25",
              "text": " @notice Get the net flowrate of an account.\n @param token Super token address\n @param account Account to query\n @return flowrate The net flowrate (aggregate incoming minus aggregate outgoing flowrate), can be negative."
            },
            "functionSelector": "22c904d9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountFlowrate",
            "nameLocation": "3969:18:25",
            "parameters": {
              "id": 12162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12159,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4000:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12166,
                  "src": "3988:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12158,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12157,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "3988:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "3988:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "3988:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12161,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4015:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12166,
                  "src": "4007:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3987:36:25"
            },
            "returnParameters": {
              "id": 12165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12164,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "4077:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12166,
                  "src": "4071:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12163,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4070:16:25"
            },
            "scope": 12233,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12183,
            "nodeType": "FunctionDefinition",
            "src": "4732:244:25",
            "nodes": [],
            "documentation": {
              "id": 12167,
              "nodeType": "StructuredDocumentation",
              "src": "4093:634:25",
              "text": " @notice Get aggregated flow information (if any exist) of an account.\n If only the net flowrate is needed, consider using `getAccountFlowrate` instead.\n @param token Super token address\n @param account Account to query\n @return lastUpdated Timestamp of last update of a flow to or from the account (flowrate change)\n @return flowrate Current net aggregate flowrate\n @return deposit Aggregate deposit amount currently locked as security buffer for outgoing flows\n @return owedDeposit Aggregate extra deposit amount currently borrowed to SuperApps receiving from this account"
            },
            "functionSelector": "0f1ac495",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountFlowInfo",
            "nameLocation": "4741:18:25",
            "parameters": {
              "id": 12173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12170,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4772:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12183,
                  "src": "4760:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12169,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12168,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "4760:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "4760:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "4760:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12172,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4787:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12183,
                  "src": "4779:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4779:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4759:36:25"
            },
            "returnParameters": {
              "id": 12182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12175,
                  "mutability": "mutable",
                  "name": "lastUpdated",
                  "nameLocation": "4864:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12183,
                  "src": "4856:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4856:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12177,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "4895:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12183,
                  "src": "4889:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12176,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4889:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12179,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "4925:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12183,
                  "src": "4917:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12181,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "4954:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12183,
                  "src": "4946:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4946:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4842:133:25"
            },
            "scope": 12233,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12200,
            "nodeType": "FunctionDefinition",
            "src": "5786:182:25",
            "nodes": [],
            "documentation": {
              "id": 12184,
              "nodeType": "StructuredDocumentation",
              "src": "4982:799:25",
              "text": " @notice Low-level wrapper of createFlow/createFlowByOperator.\n If the address of msg.sender is not the same as the address of the `sender` argument,\n createFlowByOperator is used internally. In this case msg.sender needs to have permission to create flows\n on behalf of the given sender account with sufficient flowRateAllowance.\n Currently, only 1 flow can exist between 2 accounts, thus `createFlow` will fail if one already exists.\n @param token Super token address\n @param sender Sender address of the flow\n @param receiver Receiver address of the flow\n @param flowrate The flowrate in wad/second to be set initially\n @param userData (optional) User data to be set. Should be set to zero if not needed.\n @return bool"
            },
            "functionSelector": "e15536b6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createFlow",
            "nameLocation": "5795:10:25",
            "parameters": {
              "id": 12196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12187,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5827:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12200,
                  "src": "5815:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12185,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "5815:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "5815:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "5815:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12189,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5850:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12200,
                  "src": "5842:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5842:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12191,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "5874:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12200,
                  "src": "5866:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5866:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12193,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "5898:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12200,
                  "src": "5892:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12192,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5892:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12195,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "5929:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12200,
                  "src": "5916:21:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12194,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5916:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5805:138:25"
            },
            "returnParameters": {
              "id": 12199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12200,
                  "src": "5962:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5962:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5961:6:25"
            },
            "scope": 12233,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12217,
            "nodeType": "FunctionDefinition",
            "src": "6664:182:25",
            "nodes": [],
            "documentation": {
              "id": 12201,
              "nodeType": "StructuredDocumentation",
              "src": "5974:685:25",
              "text": " @notice Low-level wrapper if updateFlow/updateFlowByOperator.\n If the address of msg.sender doesn't match the address of the `sender` argument,\n updateFlowByOperator is invoked. In this case msg.sender needs to have permission to update flows\n on behalf of the given sender account with sufficient flowRateAllowance.\n @param token Super token address\n @param sender Sender address of the flow\n @param receiver Receiver address of the flow\n @param flowrate The flowrate in wad/second the flow should be updated to\n @param userData (optional) User data to be set. Should be set to zero if not needed.\n @return bool"
            },
            "functionSelector": "0c033991",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFlow",
            "nameLocation": "6673:10:25",
            "parameters": {
              "id": 12213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12204,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6705:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12217,
                  "src": "6693:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12203,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12202,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "6693:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "6693:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "6693:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12206,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6728:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12217,
                  "src": "6720:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6720:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12208,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "6752:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12217,
                  "src": "6744:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6744:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12210,
                  "mutability": "mutable",
                  "name": "flowrate",
                  "nameLocation": "6776:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12217,
                  "src": "6770:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 12209,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6770:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12212,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "6807:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12217,
                  "src": "6794:21:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12211,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6683:138:25"
            },
            "returnParameters": {
              "id": 12216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12217,
                  "src": "6840:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12214,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6840:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6839:6:25"
            },
            "scope": 12233,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12232,
            "nodeType": "FunctionDefinition",
            "src": "7342:158:25",
            "nodes": [],
            "documentation": {
              "id": 12218,
              "nodeType": "StructuredDocumentation",
              "src": "6852:485:25",
              "text": " @notice Low-level wrapper of deleteFlow/deleteFlowByOperator.\n If msg.sender isn't the same as sender address, msg.sender needs to have permission\n to delete flows on behalf of the given sender account.\n @param token Super token address\n @param sender Sender address of the flow\n @param receiver Receiver address of the flow\n @param userData (optional) User data to be set. Should be set to zero if not needed.\n @return bool"
            },
            "functionSelector": "b4b333c6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteFlow",
            "nameLocation": "7351:10:25",
            "parameters": {
              "id": 12228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12221,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7383:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12232,
                  "src": "7371:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$10654",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 12220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12219,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "7371:11:25"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10654,
                      "src": "7371:11:25"
                    },
                    "referencedDeclaration": 10654,
                    "src": "7371:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$10654",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12223,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7406:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12232,
                  "src": "7398:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7398:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12225,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "7430:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12232,
                  "src": "7422:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7422:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12227,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "7461:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 12232,
                  "src": "7448:21:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12226,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7448:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7361:114:25"
            },
            "returnParameters": {
              "id": 12231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12232,
                  "src": "7494:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12229,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7494:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7493:6:25"
            },
            "scope": 12233,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IcfaV1Forwarder",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          12233
        ],
        "name": "IcfaV1Forwarder",
        "nameLocation": "373:15:25",
        "scope": 12234,
        "usedErrors": []
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 25
}